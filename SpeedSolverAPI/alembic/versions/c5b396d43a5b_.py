"""empty message

Revision ID: c5b396d43a5b
Revises: 3c8afc0e5fa3
Create Date: 2024-11-22 16:06:12.324590

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c5b396d43a5b'
down_revision: Union[str, None] = '3c8afc0e5fa3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('team_projects')
    op.drop_table('under_objectives')
    op.drop_table('general_objectives')
    op.drop_table('teams')
    op.drop_table('projects')
    op.drop_table('profiles')
    op.drop_table('project_objectives')
    op.drop_table('users')
    op.drop_table('pronounces')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pronounces',
    sa.Column('pronounceId', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('pronounceName', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('pronounceId', name='pronounces_pkey'),
    sa.UniqueConstraint('pronounceName', name='pronounces_pronounceName_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('users',
    sa.Column('userId', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('login', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('registered', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('userId', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    sa.UniqueConstraint('login', name='users_login_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('project_objectives',
    sa.Column('projectTaskId', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('generalObjectiveId', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('projectId', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['generalObjectiveId'], ['general_objectives.generalObjectiveId'], name='project_objectives_generalObjectiveId_fkey'),
    sa.ForeignKeyConstraint(['projectId'], ['projects.projectId'], name='project_objectives_projectId_fkey'),
    sa.PrimaryKeyConstraint('projectTaskId', name='project_objectives_pkey')
    )
    op.create_table('profiles',
    sa.Column('userProfileId', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('surname', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('patronymic', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('pronounceId', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['pronounceId'], ['pronounces.pronounceId'], name='profiles_pronounceId_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.userId'], name='profiles_user_id_fkey'),
    sa.PrimaryKeyConstraint('userProfileId', name='profiles_pkey')
    )
    op.create_table('projects',
    sa.Column('projectId', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('projectTitle', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('projectDescription', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('projectId', name='projects_pkey'),
    sa.UniqueConstraint('projectTitle', name='projects_projectTitle_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('teams',
    sa.Column('teamId', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('teamName', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('teamDescription', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('createdAt', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('creatorId', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['creatorId'], ['users.userId'], name='teams_creatorId_fkey'),
    sa.PrimaryKeyConstraint('teamId', name='teams_pkey'),
    sa.UniqueConstraint('teamName', name='teams_teamName_key')
    )
    op.create_table('general_objectives',
    sa.Column('generalObjectiveId', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('generalObjectiveName', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('generalObjectiveDescription', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('generalObjectiveId', name='general_objectives_pkey'),
    sa.UniqueConstraint('generalObjectiveName', name='general_objectives_generalObjectiveName_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('under_objectives',
    sa.Column('underObjectiveId', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('underObjectiveName', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('underObjectiveDescription', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('generalObjectiveId', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['generalObjectiveId'], ['general_objectives.generalObjectiveId'], name='under_objectives_generalObjectiveId_fkey'),
    sa.PrimaryKeyConstraint('underObjectiveId', name='under_objectives_pkey'),
    sa.UniqueConstraint('underObjectiveName', name='under_objectives_underObjectiveName_key')
    )
    op.create_table('team_projects',
    sa.Column('teamProjectid', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('projectId', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['projectId'], ['projects.projectId'], name='team_projects_projectId_fkey'),
    sa.PrimaryKeyConstraint('teamProjectid', name='team_projects_pkey')
    )
    # ### end Alembic commands ###
